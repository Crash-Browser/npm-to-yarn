{"version":3,"file":"npm-to-yarn.umd.js","sources":["../src/utils.ts","../src/yarnToNpm.ts","../src/npmToYarn.ts","../src/index.ts"],"sourcesContent":["export const unchangedCLICommands = ['test', 'login', 'logout', 'link', 'publish', 'cache']\n\nexport const yarnCLICommands = [\n  'init',\n  'run',\n  'add',\n  'audit',\n  'autoclean',\n  'bin',\n  'check',\n  'config',\n  'create',\n  'dedupe',\n  'generate-lock-entry',\n  'global',\n  'help',\n  'import',\n  'info',\n  'install',\n  'licenses',\n  'list',\n  'lockfile',\n  'outdated',\n  'owner',\n  'pack',\n  'policies',\n  'prune',\n  'remove',\n  'self-update',\n  'tag',\n  'team',\n  'link',\n  'unlink',\n  'upgrade',\n  'upgrade-interactive',\n  'version',\n  'versions',\n  'why',\n  'workspace',\n  'workspaces',\n]\n\nexport const npmCLICommands = [\n  'init',\n  'run',\n  'access',\n  'adduser',\n  'audit',\n  'bin',\n  'bugs',\n  'build',\n  'bundle',\n  'ci',\n  'completion',\n  'config',\n  'dedupe',\n  'deprecate',\n  'dist-tag',\n  'docs',\n  'doctor',\n  'edit',\n  'explore',\n  'fund',\n  'help-search',\n  'help',\n  'hook',\n  'install-ci-test',\n  'install-test',\n  'install',\n  'ls',\n  'list',\n  'npm',\n  'org',\n  'outdated',\n  'owner',\n  'pack',\n  'ping',\n  'prefix',\n  'profile',\n  'prune',\n  'rebuild',\n  'repo',\n  'restart',\n  'root',\n  'run-script',\n  'search',\n  'shrinkwrap',\n  'star',\n  'stars',\n  'start',\n  'stop',\n  'team',\n  'token',\n  'uninstall',\n  'unpublish',\n  'update',\n  'version',\n  'view',\n  'whoami',\n]\n","import { unchangedCLICommands, yarnCLICommands } from './utils'\n\nconst yarnToNpmTable = {\n  add(command: string, global?: true) {\n    let dev\n    if (command === 'add --force') {\n      return 'rebuild'\n    }\n    let ret = command\n      .replace('add', 'install')\n      .replace(/\\s*--dev/, function () {\n        dev = true\n        return ''\n      })\n      .replace('--no-lockfile', '--no-package-lock')\n      .replace('--optional', '--save-optional')\n      .replace('--exact', '--save-exact')\n    if (dev) {\n      ret += ' --save-dev'\n    } else if (global) {\n      ret += ' --global'\n    } else {\n      ret += ' --save'\n    }\n    return ret\n  },\n  remove(command: string, global?: true) {\n    let dev\n    let ret = command\n      .replace('remove', 'uninstall')\n      .replace(/\\s*--dev/, function () {\n        dev = true\n        return ''\n      })\n      .replace('--no-lockfile', '--no-package-lock')\n      .replace('--optional', '--save-optional')\n      .replace('--exact', '--save-exact')\n    if (dev) {\n      ret += ' --save-dev'\n    } else if (global) {\n      ret += ' --global'\n    } else {\n      ret += ' --save'\n    }\n    return ret\n  },\n  version(command: string) {\n    return command.replace(/--(major|minor|patch)/, '$1')\n  },\n  install: 'install',\n  list(command: string) {\n    return command\n      .replace(/--pattern [\"']([^\"']+)[\"']/, function (_, packages: string) {\n        return packages.split('|').join(' ')\n      })\n      .replace(/^list/, 'ls')\n  },\n  init: 'init',\n  create: 'init',\n  run: 'run',\n  start: 'start',\n  stop: 'stop',\n  test: 'test',\n  global(command: string) {\n    if (/^global add/.test(command)) {\n      return yarnToNpmTable.add(command.replace(/^global add/, 'add'), true)\n    } else if (/^global remove/.test(command)) {\n      return yarnToNpmTable.remove(command.replace(/^global remove/, 'remove'), true)\n    }\n    return 'npm ' + command + \"\\n# couldn't auto-convert command\"\n  },\n}\n\nexport function yarnToNPM(_m: string, command: string): string {\n  command = (command || '').trim()\n  if (command === '') {\n    return 'npm install'\n  }\n  const firstCommand = (/\\w+/.exec(command) || [''])[0]\n\n  if (unchangedCLICommands.includes(firstCommand)) {\n    return 'npm ' + command\n  }\n\n  if (firstCommand in yarnToNpmTable) {\n    const converter = yarnToNpmTable[firstCommand as keyof typeof yarnToNpmTable]\n\n    if (typeof converter === 'function') {\n      return 'npm ' + converter(command)\n    } else {\n      return 'npm ' + command.replace(firstCommand, converter)\n    }\n  } else if (!yarnCLICommands.includes(firstCommand)) {\n    // i.e., yarn grunt -> npm run grunt\n    return 'npm run ' + command\n  } else {\n    return 'npm ' + command + \"\\n# couldn't auto-convert command\"\n  }\n}\n","import { unchangedCLICommands, yarnCLICommands } from './utils'\n\nconst npmToYarnTable = {\n  install(command: string) {\n    if (/^install *$/.test(command)) {\n      return 'install'\n    }\n    let ret = command\n      .replace('install', 'add')\n      .replace('--save-dev', '--dev')\n      .replace('--no-package-lock', '--no-lockfile')\n      .replace('--save-optional', '--optional')\n      .replace('--save-exact', '--exact')\n      .replace(/\\s*--save/, '')\n    if (/ -(?:-global|g)(?![^\\b])/.test(ret)) {\n      ret = ret.replace(/ -(?:-global|g)(?![^\\b])/, '')\n      ret = 'global ' + ret\n    }\n    return ret\n  },\n  uninstall(command: string) {\n    let ret = command\n      .replace('uninstall', 'remove')\n      .replace('--save-dev', '--dev')\n      .replace(/\\s*--save/, '')\n      .replace('--no-package-lock', '--no-lockfile')\n    if (/ -(?:-global|g)(?![^\\b])/.test(ret)) {\n      ret = ret.replace(/ -(?:-global|g)(?![^\\b])/, '')\n      ret = 'global ' + ret\n    }\n    return ret\n  },\n  version(command: string) {\n    return command.replace(/(major|minor|patch)/, '--$1')\n  },\n  rebuild(command: string) {\n    return command.replace('rebuild', 'add --force')\n  },\n  exec (command: string) {\n    return command.replace(\n      /^exec\\s?([^\\s]+)?(\\s--\\s--)?(.*)$/,\n      (_, data?: string, dash?: string, rest?: string): string => {\n        let result = ''\n        if (data && !unchangedCLICommands.includes(data) && !yarnCLICommands.includes(data)) {\n          result += data\n        } else {\n          result += 'run ' + (data || '')\n        }\n        if (dash) result += dash.replace(/^\\s--/, '')\n        if (rest) result += rest\n        return result\n      }\n    )\n  },\n  run(command: string) {\n    return command.replace(\n      /^run\\s?([^\\s]+)?(\\s--\\s--)?(.*)$/,\n      (_, data?: string, dash?: string, rest?: string): string => {\n        let result = ''\n        if (data && !unchangedCLICommands.includes(data) && !yarnCLICommands.includes(data)) {\n          result += data\n        } else {\n          result += 'run ' + (data || '')\n        }\n        if (dash) result += dash.replace(/^\\s--/, '')\n        if (rest) result += rest\n        return result\n      }\n    )\n  },\n  ls(command: string) {\n    return command.replace(/^(ls|list)(.*)$/, function (_1, _2: string, args: string): string {\n      let result = 'list'\n      if (args) {\n        let ended = false\n        let packages = []\n        const items = args.split(' ').filter(Boolean)\n        for (const item of items) {\n          if (ended) {\n            result += ' ' + item\n          } else if (item.startsWith('-')) {\n            result += ' --pattern \"' + packages.join('|') + '\"'\n            packages = []\n            ended = true\n            result += ' ' + item\n          } else {\n            packages.push(item)\n          }\n        }\n        if (packages.length > 0) {\n          result += ' --pattern \"' + packages.join('|') + '\"'\n        }\n        return result\n      } else {\n        return 'list'\n      }\n    })\n  },\n  list(command: string) {\n    return npmToYarnTable.ls(command)\n  },\n  init(command: string) {\n    if (/^init (?!-).*$/.test(command)) {\n      return command.replace('init', 'create')\n    }\n    return command.replace(' --scope', '')\n  },\n  start: 'start',\n  stop: 'stop',\n  test: 'test',\n}\n\nexport function npmToYarn(_m: string, command: string): string {\n  command = (command || '').trim()\n  const firstCommand = (/\\w+/.exec(command) || [''])[0]\n\n  if (unchangedCLICommands.includes(firstCommand)) {\n    return 'yarn ' + command\n  }\n\n  if (firstCommand in npmToYarnTable) {\n    const converter = npmToYarnTable[firstCommand as keyof typeof npmToYarnTable]\n\n    if (typeof converter === 'function') {\n      return 'yarn ' + converter(command)\n    } else {\n      return 'yarn ' + command.replace(firstCommand, converter)\n    }\n  } else {\n    return 'yarn ' + command + \"\\n# couldn't auto-convert command\"\n  }\n}\n","import { yarnToNPM } from './yarnToNpm'\nimport { npmToYarn } from './npmToYarn'\n\n/**\n * Converts yarn to npm command\n */\nexport function convertToNpm(str: string) {\n  return str.replace(/yarn(?: +([^&\\n\\r]*))?/gm, yarnToNPM)\n}\n\n/**\n * Converts npm to yarn command\n */\nexport function convertToYarn(str: string) {\n  return str.replace(/npm(?: +([^&\\n\\r]*))?/gm, npmToYarn)\n}\n\n/**\n * Converts between npm and yarn command\n */\nexport default function convert(str: string, to: 'npm' | 'yarn'): string {\n  if (to === 'npm') {\n    return convertToNpm(str)\n  } else {\n    return convertToYarn(str)\n  }\n}\n"],"names":[],"mappings":"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"}