{"version":3,"file":"npm-to-yarn.umd.js","sources":["../src/utils.ts","../src/command.ts","../src/yarnToNpm.ts","../src/npmToYarn.ts","../src/index.ts"],"sourcesContent":["export const unchangedCLICommands = ['test', 'login', 'logout', 'link', 'publish', 'cache']\n\nexport const yarnCLICommands = [\n  'init',\n  'run',\n  'add',\n  'audit',\n  'autoclean',\n  'bin',\n  'check',\n  'config',\n  'create',\n  'dedupe',\n  'generate-lock-entry',\n  'global',\n  'help',\n  'import',\n  'info',\n  'install',\n  'licenses',\n  'list',\n  'lockfile',\n  'outdated',\n  'owner',\n  'pack',\n  'policies',\n  'prune',\n  'remove',\n  'self-update',\n  'tag',\n  'team',\n  'link',\n  'unlink',\n  'upgrade',\n  'upgrade-interactive',\n  'version',\n  'versions',\n  'why',\n  'workspace',\n  'workspaces',\n]\n\nexport const npmCLICommands = [\n  'init',\n  'run',\n  'access',\n  'adduser',\n  'audit',\n  'bin',\n  'bugs',\n  'build',\n  'bundle',\n  'ci',\n  'completion',\n  'config',\n  'dedupe',\n  'deprecate',\n  'dist-tag',\n  'docs',\n  'doctor',\n  'edit',\n  'explore',\n  'exec',\n  'fund',\n  'help-search',\n  'help',\n  'hook',\n  'install-ci-test',\n  'install-test',\n  'install',\n  'ls',\n  'list',\n  'npm',\n  'org',\n  'outdated',\n  'owner',\n  'pack',\n  'ping',\n  'prefix',\n  'profile',\n  'prune',\n  'rebuild',\n  'repo',\n  'restart',\n  'root',\n  'run-script',\n  'search',\n  'shrinkwrap',\n  'star',\n  'stars',\n  'start',\n  'stop',\n  'team',\n  'token',\n  'uninstall',\n  'unpublish',\n  'update',\n  'version',\n  'view',\n  'whoami',\n]\n","export function parse(command: string) {\n  const args: string[] = []\n  let lastQuote: string | false = false\n  let escaped = false\n  let part = ''\n  for (let i = 0; i < command.length; ++i) {\n    const char = command.charAt(i)\n    if (char === '\\\\') {\n      part += char\n      escaped = true\n    } else {\n      if (char === ' ' && !lastQuote) {\n        args.push(part)\n        part = ''\n      } else if (!escaped && (char === '\"' || char === \"'\")) {\n        part += char\n        if (char === lastQuote) {\n          lastQuote = false\n        } else if (!lastQuote) {\n          lastQuote = char\n        }\n      } else {\n        part += char\n      }\n      escaped = false\n    }\n  }\n  args.push(part)\n  return args\n}\n","import { unchangedCLICommands, yarnCLICommands } from './utils'\nimport { parse } from './command'\n\nfunction convertAddRemoveArgs(args: string[]) {\n  return args.map((item) => {\n    switch (item) {\n      case '--no-lockfile':\n        return '--no-package-lock'\n      case '--dev':\n        return '--save-dev'\n      case '--optional':\n        return '--save-optional'\n      case '--exact':\n        return '--save-exact'\n      default:\n        return item\n    }\n  })\n}\n\nconst yarnToNpmTable = {\n  add(args: string[]) {\n    if (args[1] === '--force') {\n      return ['rebuild']\n    }\n    args[0] = 'install'\n    if (!args.includes('--dev')) {\n      args.push('--save')\n    }\n    return convertAddRemoveArgs(args)\n  },\n  remove(args: string[]) {\n    args[0] = 'uninstall'\n    if (!args.includes('--dev')) {\n      args.push('--save')\n    }\n    return convertAddRemoveArgs(args)\n  },\n  version(args: string[]) {\n    return args.map((item) => {\n      switch (item) {\n        case '--major':\n          return 'major'\n        case '--minor':\n          return 'minor'\n        case '--patch':\n          return 'patch'\n        default:\n          return item\n      }\n    })\n  },\n  install: 'install',\n  list(args: string[]) {\n    args[0] = 'ls'\n    const patternIndex = args.findIndex((item) => item === '--pattern')\n    if (patternIndex && args[patternIndex + 1]) {\n      const packages = args[patternIndex + 1].replace(/[\"']([^\"']+)[\"']/, '$1').split('|')\n      args.splice(patternIndex, 2, packages.join(' '))\n    }\n    return args\n  },\n  init: 'init',\n  create: 'init',\n  run: 'run',\n  start: 'start',\n  stop: 'stop',\n  test: 'test',\n  global(args: string[]) {\n    if (args[1] === 'add' || args[1] === 'remove') {\n      args.splice(0, 2, args[1] === 'add' ? 'install' : 'uninstall')\n      args.push('--global')\n      return convertAddRemoveArgs(args)\n    }\n    // TODO: find better way\n    args.push(\"\\n# couldn't auto-convert command\")\n    return args\n  },\n}\n\nexport function yarnToNPM(_m: string, command: string): string {\n  command = (command || '').trim()\n  if (command === '') {\n    return 'npm install'\n  }\n  let args = parse(command)\n  const firstCommand = (/\\w+/.exec(command) || [''])[0]\n\n  if (unchangedCLICommands.includes(args[0])) {\n    return 'npm ' + command\n  } else if (args[0] in yarnToNpmTable) {\n    const converter = yarnToNpmTable[args[0] as keyof typeof yarnToNpmTable]\n\n    if (typeof converter === 'function') {\n      args = converter(args)\n    } else {\n      args[0] = converter\n    }\n\n    return 'npm ' + args.filter(Boolean).join(' ')\n  } else if (!yarnCLICommands.includes(firstCommand)) {\n    // i.e., yarn grunt -> npm run grunt\n    return 'npm run ' + command\n  } else {\n    return 'npm ' + command + \"\\n# couldn't auto-convert command\"\n  }\n}\n","import { unchangedCLICommands, yarnCLICommands } from './utils'\nimport { parse } from './command'\n\nconst npmToYarnTable = {\n  install(args: string[]) {\n    if (args.length === 1) {\n      return args\n    }\n    args[0] = 'add'\n\n    if (args.includes('--global') || args.includes('-g')) {\n      args.unshift('global')\n    }\n\n    return args.map((item) => {\n      if (item === '--save-dev') return '--dev'\n      else if (item === '--save') return ''\n      else if (item === '--no-package-lock') return '--no-lockfile'\n      else if (item === '--save-optional') return '--optional'\n      else if (item === '--save-exact') return '--exact'\n      else if (item === '--global' || item === '-g') return ''\n      return item\n    })\n  },\n  i(args: string[]) {\n    return npmToYarnTable.install(args)\n  },\n  uninstall(args: string[]) {\n    args[0] = 'remove'\n\n    if (args.includes('--global') || args.includes('-g')) {\n      args.unshift('global')\n    }\n\n    return args.map((item) => {\n      if (item === '--save-dev') return '--dev'\n      else if (item === '--save') return ''\n      else if (item === '--no-package-lock') return '--no-lockfile'\n      else if (item === '--global' || item === '-g') return ''\n      return item\n    })\n  },\n  version(args: string[]) {\n    return args.map((item) => {\n      if (['major', 'minor', 'patch'].includes(item)) return `--${item}`\n      return item\n    })\n  },\n  rebuild(args: string[]) {\n    args[0] = 'add --force'\n    return args\n  },\n  run(args: string[]) {\n    if (args[1] && !unchangedCLICommands.includes(args[1]) && !yarnCLICommands.includes(args[1])) {\n      args.splice(0, 1)\n    }\n    return args\n  },\n  exec(args: string[]) {\n    args[0] = 'run'\n    return npmToYarnTable.run(args)\n  },\n  ls(args: string[]) {\n    args[0] = 'list'\n\n    let ended = false\n    const packages = args.filter((item, id) => {\n      if (id > 0 && !ended) {\n        ended = item.startsWith('-')\n        return !ended\n      }\n      return false\n    })\n    if (packages.length > 0) {\n      args.splice(1, packages.length, '--pattern', '\"' + packages.join('|') + '\"')\n    }\n    return args\n  },\n  list(args: string[]) {\n    return npmToYarnTable.ls(args)\n  },\n  init(args: string[]) {\n    if (args[1] && !args[1].startsWith('-')) {\n      args[0] = 'create'\n    }\n    return args.filter((item) => item !== '--scope')\n  },\n  start: 'start',\n  stop: 'stop',\n  test: 'test',\n}\n\nexport function npmToYarn(_m: string, command: string): string {\n  let args = parse((command || '').trim())\n\n  const index = args.findIndex((a) => a === '--')\n  if (index >= 0) {\n    args.splice(index, 1)\n  }\n\n  if (unchangedCLICommands.includes(args[0])) {\n    return 'yarn ' + args.join(' ')\n  } else if (args[0] in npmToYarnTable) {\n    const converter = npmToYarnTable[args[0] as keyof typeof npmToYarnTable]\n\n    if (typeof converter === 'function') {\n      args = converter(args)\n    } else {\n      args[0] = converter\n    }\n\n    return 'yarn ' + args.filter(Boolean).join(' ')\n  } else {\n    return 'yarn ' + command + \"\\n# couldn't auto-convert command\"\n  }\n}\n","import { yarnToNPM } from './yarnToNpm'\nimport { npmToYarn } from './npmToYarn'\n\n/**\n * Converts yarn to npm command\n */\nfunction convertToNpm(str: string) {\n  return str.replace(/yarn(?: +([^&\\n\\r]*))?/gm, yarnToNPM)\n}\n\n/**\n * Converts npm to yarn command\n */\nfunction convertToYarn(str: string) {\n  return str.replace(/npm(?: +([^&\\n\\r]*))?/gm, npmToYarn)\n}\n\n/**\n * Converts between npm and yarn command\n */\nexport default function convert(str: string, to: 'npm' | 'yarn'): string {\n  if (to === 'npm') {\n    return convertToNpm(str)\n  } else {\n    return convertToYarn(str)\n  }\n}\n"],"names":[],"mappings":"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"}